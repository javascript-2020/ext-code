

(async ()=>{

        //docker['nodejs-min'].start('ssh test',2222);
        //docker['ssh test'].stop();
        //docker['ssh test'].remove();
        
        var modproxy    = await ext.load.libs['core/proxy/modproxy.js'];
        var proxy       = modproxy(launch,{promiseCompat:true});
        return proxy;
        
        
        function launch(lname,args){
        
                var cp      = require('node:child_process');
                var util    = require('node:util');
                var exec    = util.promisify(cp.exec);
                
                var image;
                var mode;
                var name;
                var ssh_port;
                
                var parts   = lname.split('.');
                mode        = parts.at(-1);
                if(mode=='start'){
                      image       = parts[0];
                      name        = args[0];
                      ssh_port    = args[1];
                      start();
                }
                if(mode=='stop'){
                      name    = parts[0];
                      stop();
                }
                if(mode=='rem' || mode=='remove'){
                      name    = parts[0];
                      stop();
                }
                
                
                async function start(){
                
                      var opts    = {};
                      var cmd     = `docker run -di -p ${ssh_port}:2222 --name "${name}" "${image}"`;
                      
                      try{
                            var {stdout,stderr}   = await exec(cmd,opts);
                      }
                      catch(err2){
                            var err3   = err2;
                      }
                      
                      if(err3){
                            console.error('error');
                            console.log();
                            console.log(err3.cmd);
                            console.log();
                            console.log(err3.stderr);
                            return;
                      }
                      
                      if(stdout){
                            console.log(stdout);
                      }
                      if(stderr){
                            console.log(stderr);
                      }
                      
                }//start
                
                
                async function stop(){
                
                      var opts    = {};
                      var cmd     = `docker kill ${name}`;
                      var {err,stdout,stderr}   = await exec(cmd,opts)
                      
                      if(err){
                            console.error(err);
                      }
                      
                      console.log(stdout);
                      console.log(stderr);
                      
                      if(err){
                            return;
                      }
                      
                      if(mode=='rem'){
                            remove();
                      }
                      
                }//stop
                
                
                async function remove(){
                
                      var opts    = {};
                      var cmd     = `docker rm ${name}`;
                      var {err,stdout,stderr}   = await exec(cmd,opts);
                      
                      if(err){
                            console.error(err);
                      }
                      
                      console.log(stdout);
                      console.log(stderr);
                      
                }//remove
                
                
        }//launch
        
})();














