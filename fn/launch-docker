

var view=nodejs.iframe.list[0];
var iframe=$(view.root,'iframe');
var win=iframe.contentWindow;
win.term.writeln('test');




return;  
  
    
var view=list[list.index];
var tab=list.view.find(view,'new-2');
console.log(tab);


iframe.new(tab.session.getValue(),'attach',{onload});

function onload(view){

var frame=$(view.root,'iframe');
var win=iframe.contentWindow;
win.term.writeLn('test');
  
}//onload


<head>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@xterm/xterm/css/xterm.min.css">

<script src="https://cdn.jsdelivr.net/npm/@xterm/xterm/lib/xterm.min.js"></script>

</head>

<body>
  <div id="terminal"></div>
  <script>
  
    var term = new Terminal();
    term.open(document.getElementById('terminal'));
    term.writeln('\x1B[1;3;31mxterm.js\x1B[0m');
    term.write(' $ ');
    
  </script>
</body>



(async ()=>{
  
        //mod['nodejs-min'].start('ssh test',2222);

  
        var modproxy    = await ext.libs.core.proxy.modproxy.js;
        var proxy       = modproxy(launch);
        return proxy;

        
        function launch(lname,args){
        
                var cp      = require('node:child_process');
                var util    = require('node:util');
                var exec    = util.promisify(cp.exec);
                
                var parts   = lname.split('.');
                var image   = parts[0];
                var mode    = parts[1];
                var name    = args[0];
                var port    = args[1];
                
                if(mode=='start')start();
                if(mode=='stop' || mode=='rem')stop();
                
                
                async function start(){
                
                      var opts    = {};
                      var cmd     = `docker run -di -p ${port}:2222 --name ${name} ${image}`;
                      
                      try{
                            var {stdout,stderr}   = await exec(cmd,opts);
                      }
                      catch(err2){
                            var err3   = err2;
                      }
                      
                      if(err3){
                            console.error('error');
                            console.log();
                            console.log(err3.cmd);
                            console.log();
                            console.log(err3.stderr);
                            return;
                      }
                      
                      if(stdout){
                            console.log(stdout);
                      }
                      if(stderr){
                            console.log(stderr);
                      }
                      
                }//start
                
                
                async function stop(){
                
                      var opts    = {};
                      var cmd     = `docker kill ${name}`;
                      var {err,stdout,stderr}   = await exec(cmd,opts)
                      
                      if(err){
                            console.error(err);
                      }
                      
                      console.log(stdout);
                      console.log(stderr);
                      
                      if(err){
                            return;
                      }
                      
                      if(mode=='rem'){
                            remove();
                      }
                      
                }//stop
                
                
                async function remove(){
                
                      var opts    = {};
                      var cmd     = `docker rm ${name}`;
                      var {err,stdout,stderr}   = await exec(cmd,opts);
                      
                      if(err){
                            console.error(err);
                      }
                      
                      console.log(stdout);
                      console.log(stderr);
                      
                }//remove
                
                
        }//launch

})();



        
        



        






/* node-js-tabs
{"names":["new-1","new-2","new-3"],"info":[["new-1","new-2",443,443,"append"],["new-1","new-3",886,3310,"append"]]}
*/